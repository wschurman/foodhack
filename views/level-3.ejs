<div class="page-header">
  <h1>
  	Level 3 Problems
  	<small>ChipotleÂ® Burrito</small>
  </h1>
</div>

<h2>Exploit this website!</h2>
<div class="bs-docs-example">
  <u>DO NOT DDoS it</u>. Find an exploit, test that it works, show us. We are aware of one. There may be more. Do not share this exploit with others. Hint: start at the source.
</div>
<a href="/submit?p=3-1" data-toggle="modal" data-target="#myModal" class="btn btn-primary">
  <i class="icon-thumbs-up icon-white"></i> Submit Solution
</a>
<hr />


<h2>Solve levels 3-4 of Stripe CTF</h2>
<div class="bs-docs-example">
  See <a href="https://stripe-ctf.com" target="_blank">https://stripe-ctf.com</a>. Submit either your ctf screen name and make it public or show us your progress page. You will automatically get a cookie as well!
</div>
<a href="/submit?p=3-2" data-toggle="modal" data-target="#myModal" class="btn btn-primary">
  <i class="icon-thumbs-up icon-white"></i> Submit Solution
</a>
<hr />


<h2>Longest Common Subsequence</h2>
<div class="bs-docs-example">
  Implement a function that takes two files containing long strings, parses them, and finds their longest common subsequence. The runtime of the algorithm should be O(nm) where n and m are the lengths of the two strings (ignore parsing complexity).
  Download the files <a href="http://cl.ly/3B1X0L152h30" target="_blank">here</a>.
</div>
<pre class="prettyprint linenums">
// Example
str1 = ABCAJSHDLAKWO
str2 = NFJACAKDJDLAUHSN

function longest_substring(s1, s2) {
  // To Be Implemented
}

print longest_substring(str1, str2)
// Outputs: DLA
</pre>
<a href="/submit?p=3-3" data-toggle="modal" data-target="#myModal" class="btn btn-primary">
  <i class="icon-thumbs-up icon-white"></i> Submit Solution
</a>
<hr />